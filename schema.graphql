type Query {
  allMdx: [Mdx!]!
  mdx(slug: String, compilerOptions: CompileOptionsInput): Mdx
  mdxInputs: [File]!
  meta: Meta
}

type Mdx {
  jsx: String!
  raw: String!
  slug: String
}

type Meta {
  baseUrl: String!
}

type Text {
  value: String!
  type: Type!
}

enum Type {
  TEXT
  FILE
}

type File {
  resource: String!
  absolutePath: String!
  node: Text!
  value: String!
  type: Type!
}

input CompileOptionsInput {
  """
  Whether to keep JSX.
  """
  jsx: Boolean

  """
  Whether to compile to a whole program or a function body.
  """
  outputFormat: OutputFormat

  """
  Place to import automatic JSX runtimes from (used in automatic runtime).
  """
  jsxImportSource: String
}

enum OutputFormat {
  PROGRAM
  FUNCTION_BODY
}
